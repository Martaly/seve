#!/usr/bin/env node
/* leny/seve
 *
 * /src/seve.js - Main Entry point
 *
 * coded by leny@flatLand!
 * refactored at 30/10/2018
 */ /* eslint-disable no-console */"use strict";var _express=_interopRequireDefault(require("express"));var _expressHandlebars=_interopRequireDefault(require("express-handlebars"));var _chalk=_interopRequireDefault(require("chalk"));var _fs=_interopRequireDefault(require("fs"));var _path=_interopRequireDefault(require("path"));var _os=_interopRequireDefault(require("os"));var _commander=_interopRequireDefault(require("commander"));var _mimetype=_interopRequireDefault(require("mimetype"));var _humanSize=_interopRequireDefault(require("human-size"));var _moment=_interopRequireDefault(require("moment"));var _openurl=require("openurl");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}let pkg=require("../package.json"),server=(0,_express.default)(),sServerRoot=process.cwd(),iPort;_commander.default.version(pkg.version).arguments("[folder]").usage("[options] [folder]").description("Run a tiny & simple server (like, for tests & stuffs) from a given folder (or the current).").option("-p, --port <port>","port used by the server (default to 12345)").option("-q, --quiet","don't show the logs").option("-i, --index","enable autoindex").option("-N, --no-open","don't browse to the URL at startup").action(sFolder=>{if(!_fs.default.existsSync(sFolder)){return console.log(_chalk.default.bold.red("✘ given folder doesn't exists, use current path instead."));}if(!_fs.default.statSync(sFolder).isDirectory()){return console.log(_chalk.default.bold.red("✘ given folder isn't a folder, use current path instead."));}sServerRoot=sFolder;}).parse(process.argv);if(isNaN(iPort=+(_commander.default.port||12345))){console.log(_chalk.default.bold.red(`✘ port must be a number, '${iPort}' given.`));process.exit(1);}if(iPort<=1024&&process.getuid()!==0){console.log(_chalk.default.bold.yellow(`⚠ seve needs to be run as sudo to use port '${iPort}'.`));process.exit(1);}if(_commander.default.index){server.engine("hbs",(0,_expressHandlebars.default)({extname:"hbs"})).set("view engine","hbs").set("views",`${__dirname}/../views`).use("/__seve",_express.default.static(`${__dirname}/../autoindexes`)).use((oRequest,oResponse,fNext)=>{if(oRequest.url.substr(-1)==="/"){let sPath=_path.default.join(sServerRoot,oRequest.url);if(_fs.default.existsSync(`${sPath}/index.html`)){return oResponse.sendFile(`${sPath}/index.html`);}if(_fs.default.existsSync(`${sPath}/index.htm`)){return oResponse.sendFile(`${sPath}/index.htm`);}return oResponse.render("autoindex.hbs",{files:_fs.default.readdirSync(sPath).map(sFile=>{if(sFile.substr(0,1)!=="."){let oFile=_fs.default.statSync(`${sPath}/${sFile}`),sMimeType=_mimetype.default.lookup(sFile);sMimeType=sMimeType?sMimeType.split("/")[0]:"unknown";return{isFolder:oFile.isDirectory(),mime:oFile.isDirectory()?"folder":sMimeType,name:sFile,size:(0,_humanSize.default)(oFile.size),time:{raw:oFile.mtime,human:(0,_moment.default)(oFile.mtime).format("YYYY-MM-DD HH:mm:SS")}};}return false;}).sort(),folder:oRequest.url,hasParent:oRequest.url!=="/",port:iPort,root:sServerRoot.replace(_os.default.homedir(),"~"),version:pkg.version});}fNext();});}if(!_commander.default.quiet){server.use((oRequest,oResponse,fNext)=>{let sHour=new Date().toTimeString().split(" ")[0];console.log(_chalk.default.cyan(`[${sHour}]`),_chalk.default.magenta(`(${oRequest.method})`),oRequest.url);fNext();});}server.use(_express.default.static(sServerRoot));server.listen(iPort);if(_commander.default.open){(0,_openurl.open)(`http://localhost:${iPort}`);}console.log(_chalk.default.underline(`Serving folder ${_chalk.default.bold.cyan(sServerRoot)} listening on port ${_chalk.default.bold.yellow(iPort)}.`));console.log(`Quit with (${_chalk.default.cyan("^+C")}).\n`);